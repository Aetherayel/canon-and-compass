---
import { SITE, LINKS, FOUNDATIONS_LINKS } from "@consts"
import { cn } from "@lib/utils"
const { pathname } = Astro.url
import Container from "@components/Container.astro"

const isActivePath = (href: string) => {
  if (href === "/") return pathname === "/"
  return pathname === href || pathname.startsWith(`${href}/`)
}

const foundationRoutes = ["/foundations", ...FOUNDATIONS_LINKS.map((link) => link.HREF)]
const isFoundationsActive = foundationRoutes.some(isActivePath)
---

<header id="header" class="fixed top-0 w-full h-16 z-50 ">
  <Container size="md">
    <div class="relative h-full w-full">
      <div class="absolute left-0 top-1/2 -translate-y-1/2 flex gap-1 font-semibold">
        <a href="/" class="flex gap-1 text-current hover:text-black dark:hover:text-white transition-colors duration-300 ease-in-out">
          <svg class="size-6 fill-current">
            <use href="/brand.svg#brand"></use>
          </svg>
          <div>
            {SITE.TITLE}
          </div>
        </a>
      </div>
      
    <div class="absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2">
      <nav class="hidden md:flex items-center justify-center text-sm gap-1">
        {
          LINKS.map((LINK) => {
            const isActive = isActivePath(LINK.HREF)
            if (LINK.TEXT === "Foundations") {
              return (
                <div class="relative group" role="none">
                  <a
                    href={LINK.HREF}
                    class={cn(
                      "group relative flex h-8 items-center rounded-full px-3 text-current transition-colors duration-300 ease-in-out",
                      isFoundationsActive
                        ? "bg-black dark:bg-white text-white dark:text-black"
                        : "hover:bg-black/5 dark:hover:bg-white/20 hover:text-black dark:hover:text-white",
                    )}
                    aria-current={isFoundationsActive ? "page" : undefined}
                    aria-haspopup="true"
                    aria-expanded={isFoundationsActive ? "true" : undefined}
                  >
                    <span class="flex-1 text-center">{LINK.TEXT}</span>
                    <svg
                      class={cn(
                        "size-3 absolute right-3 top-1/2 -translate-y-1/2 transition-transform duration-200 ease-in-out group-hover:-rotate-180 group-focus-within:-rotate-180",
                        isFoundationsActive && "-rotate-180",
                      )}
                      viewBox="0 0 24 24"
                      fill="none"
                      stroke-width="2"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                    >
                      <path d="M6 9l6 6 6-6" />
                    </svg>
                  </a>
                  <div class="absolute left-1/2 top-full z-20 mt-1 hidden w-48 -translate-x-1/2 pointer-events-auto group-hover:flex group-focus-within:flex">
                    <div class="flex w-full flex-col gap-1 rounded-xl border border-black/10 bg-white p-3 text-left shadow-lg dark:border-white/15 dark:bg-zinc-900" role="menu">
                      {FOUNDATIONS_LINKS.map((child) => {
                        const childActive = isActivePath(child.HREF)
                        return (
                          <a
                            href={child.HREF}
                            class={cn(
                              "block w-full rounded-lg px-2 py-2 text-sm transition-colors duration-200 ease-in-out",
                              childActive
                                ? "bg-black text-white dark:bg-white dark:text-black"
                                : "hover:bg-black/5 dark:hover:bg-white/15",
                            )}
                            aria-current={childActive ? "page" : undefined}
                            role="menuitem"
                          >
                            {child.TEXT}
                          </a>
                        )
                      })}
                    </div>
                  </div>
                </div>
              )
            }

            return (
              <a href={LINK.HREF} class={cn(
                "h-8 rounded-full px-3 text-current",
                "flex items-center justify-center",
                "transition-colors duration-300 ease-in-out",
                isActive
                  ? "bg-black dark:bg-white text-white dark:text-black"
                  : "hover:bg-black/5 dark:hover:bg-white/20 hover:text-black dark:hover:text-white",
              )} aria-current={isActive ? "page" : undefined}>
                {LINK.TEXT}
              </a>
            )
          })
        }
      </nav>
    </div>

    <div class="buttons absolute right-0 top-1/2 -translate-y-1/2 flex gap-1">
        <a href="/search" aria-label={`Search the site on ${SITE.TITLE}`} class={cn("hidden md:flex", "size-9 rounded-full p-2 items-center justify-center", "bg-transparent hover:bg-black/5 dark:hover:bg-white/20", "stroke-current hover:stroke-black hover:dark:stroke-white", "border border-black/10 dark:border-white/25", "transition-colors duration-300 ease-in-out", isActivePath("/search") ? "pointer-events-none bg-black dark:bg-white text-white dark:text-black" : "")}>
        <svg class="size-full">
          <use href="/ui.svg#search"></use>
        </svg>
      </a>

      <a href="/rss.xml" target="_blank" aria-label={`Rss feed for ${SITE.TITLE}`} class={cn("hidden md:flex", "size-9 rounded-full p-2 items-center justify-center", "bg-transparent hover:bg-black/5 dark:hover:bg-white/20", "stroke-current hover:stroke-black hover:dark:stroke-white", "border border-black/10 dark:border-white/25", "transition-colors duration-300 ease-in-out")}>
        <svg class="size-full">
          <use href="/ui.svg#rss"></use>
        </svg>
      </a>

      <button id="header-theme-button" aria-label={`Toggle light and dark theme`} class={cn("hidden md:flex", "size-9 rounded-full p-2 items-center justify-center", "bg-transparent hover:bg-black/5 dark:hover:bg-white/20", "stroke-current hover:stroke-black hover:dark:stroke-white", "border border-black/10 dark:border-white/25", "transition-colors duration-300 ease-in-out")}>
        <svg class="size-full block dark:hidden">
          <use href="/ui.svg#sun"></use>
        </svg>
        <svg class="size-full hidden dark:block">
          <use href="/ui.svg#moon"></use>
        </svg>
      </button>

      <button id="header-drawer-button" aria-label={`Toggle drawer open and closed`} class={cn("flex md:hidden", "size-9 rounded-full p-2 items-center justify-center", "bg-transparent hover:bg-black/5 dark:hover:bg-white/20", "stroke-current hover:stroke-black hover:dark:stroke-white", "border border-black/10 dark:border-white/25", "transition-colors duration-300 ease-in-out")}>
        <svg id="drawer-open" class="size-full">
          <use href="/ui.svg#menu"></use>
        </svg>
        <svg id="drawer-close" class="size-full">
          <use href="/ui.svg#x"></use>
        </svg>
      </button>
    </div>
  </div>
  </Container>
</header>

<style>
  #header-drawer-button > #drawer-open {
    @apply block;
  }

  #header-drawer-button > #drawer-close {
    @apply hidden;
  }

  #header-drawer-button.open > #drawer-open {
    @apply hidden;
  }

  #header-drawer-button.open > #drawer-close {
    @apply block;
  }
</style>

<script is:inline>
  function toggleDrawer() {
    const drawer = document.getElementById("drawer")
    const drawerButton = document.getElementById("header-drawer-button")
    drawer?.classList.toggle("open")
    drawerButton?.classList.toggle("open")
  }

  function initializeDrawerButton() {
    const drawerButton = document.getElementById("header-drawer-button")
    drawerButton?.addEventListener("click", toggleDrawer)
  }

  document.addEventListener("astro:after-swap", initializeDrawerButton)
  initializeDrawerButton()
</script>
