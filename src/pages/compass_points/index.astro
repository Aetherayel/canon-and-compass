---
import { getCollection } from "astro:content";
import PageLayout from "@layouts/PageLayout.astro";
import TopLayout from "@layouts/TopLayout.astro";
import BottomLayout from "@layouts/BottomLayout.astro";
import SearchCollection from "@components/SearchCollection";
import { COMPASSPOINTS } from "@consts";

const compassPoints = (await getCollection("compass_points"))
  .filter((point) => !point.data.draft)
  .sort((a, b) => b.data.date.getTime() - a.data.date.getTime());

const tags = [
  ...new Set(compassPoints.flatMap((point) => point.data.tags)),
].sort((a, b) => a.localeCompare(b));

const estimated_initial_size =
  28 + compassPoints.length * 158 + (compassPoints.length - 1) * 12;
---

<PageLayout title={COMPASSPOINTS.TITLE} description={COMPASSPOINTS.DESCRIPTION}>
  <TopLayout>
    <div class="animate">
      <h1 class="text-3xl font-semibold text-black dark:text-white mt-2">
        {COMPASSPOINTS.TITLE}
      </h1>
      <div class="mt-1">
        {COMPASSPOINTS.DESCRIPTION}
      </div>
    </div>
  </TopLayout>
  <BottomLayout>
    <div
      id="search-collection-wrapper"
      class="animate"
      style={{ minHeight: `${estimated_initial_size}px` }}
    >
      <SearchCollection
        client:load
        entry_name={"points"}
        tags={tags}
        data={compassPoints}
      />
    </div>
  </BottomLayout>
</PageLayout>
