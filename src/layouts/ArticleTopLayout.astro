---
import type { CollectionEntry } from "astro:content"
import { formatDate, readingTime } from "@lib/utils"

type Props = {
  entry:
    | CollectionEntry<"tree">
    | CollectionEntry<"the-clearing">
    | CollectionEntry<"tree-shifts">
    | CollectionEntry<"canon_notes">
    | CollectionEntry<"compass_points">
    | CollectionEntry<"pillars">
    | CollectionEntry<"foundations-of-discernment">
}

const { entry } = Astro.props
const { collection, data, body } = entry
const { title } = data
const summary = "summary" in data ? data.summary : data.description
const date = "date" in data ? data.date : undefined

const demoUrl =
  collection !== "tree" && collection !== "tree-shifts" ? data.demoUrl : null
const repoUrl =
  collection !== "tree" && collection !== "tree-shifts" ? data.repoUrl : null
// Back link: pretty label + special-case collection routing
function toTitleCase(raw: string) {
  return raw
    .replace(/[._-]+/g, " ")
    .split(" ")
    .filter(Boolean)
    .map((w) => w.charAt(0).toUpperCase() + w.slice(1))
    .join(" ");
}

const backHref = collection === "tree-shifts" ? "/symptoms" : `/${collection}`;
const backLabel = collection === "tree-shifts" ? "Symptoms" : toTitleCase(collection);
---

<div>
  <a href={backHref} class="group w-fit p-1.5 gap-1.5 text-sm flex items-center border rounded hover:bg-black/5 hover:dark:bg-white/10 border-black/15 dark:border-white/20 transition-colors duration-300 ease-in-out">
    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round" class="stroke-current group-hover:stroke-black group-hover:dark:stroke-white">
      <line x1="19" y1="12" x2="5" y2="12" class="scale-x-0 group-hover:scale-x-100 translate-x-3 group-hover:translate-x-0 transition-all duration-300 ease-in-out" />
      <polyline points="12 19 5 12 12 5" class="translate-x-1 group-hover:translate-x-0 transition-all duration-300 ease-in-out" />
    </svg>
    <div class="w-full group-hover:text-black group-hover:dark:text-white transition-colors duration-300 ease-in-out">
      Back to {backLabel}
    </div>
  </a>
  <div class="flex flex-wrap text-sm uppercase mt-12 gap-3 opacity-75">
    {date && (
    <div class="flex items-center gap-2">
      <svg class="size-5 stroke-current">
        <use href="/ui.svg#calendar"/>
      </svg>
      {formatDate(date)}
    </div>
    )}
    <div class="flex items-center gap-2">
      <svg class="size-5 stroke-current">
        <use href="/ui.svg#book-open"/>
      </svg>
      {readingTime(body)}
    </div>
  </div>
  <h1 class="text-3xl font-semibold text-black dark:text-white mt-2">
    {title}
  </h1>
  <div class="mt-1">
    {summary}
  </div>
  {(demoUrl || repoUrl) && 
  <div class="mt-4 flex flex-wrap gap-2">
    {demoUrl && 
      <a href={demoUrl} target="_blank" class="group flex gap-2 items-center px-3 py-1.5 truncate rounded text-xs md:text-sm lg:text-base border border-black/25 dark:border-white/25 hover:bg-black/5 hover:dark:bg-white/15 blend">
        <svg class="size-4">
          <use href="/ui.svg#globe" class="fill-current group-hover:fill-black group-hover:dark:fill-white blend"/>
        </svg>
        <span class="text-current group-hover:text-black group-hover:dark:text-white blend">
          See Demo
        </span>
      </a>
    }
    {repoUrl && 
      <a href={repoUrl} target="_blank" class="group flex gap-2 items-center px-3 py-1.5 truncate rounded text-xs md:text-sm lg:text-base border border-black/25 dark:border-white/25 hover:bg-black/5 hover:dark:bg-white/15 blend">
        <svg class="size-4">
          <use href="/ui.svg#link" class="fill-current group-hover:fill-black group-hover:dark:fill-white blend"/>
        </svg>
        <span class="text-current group-hover:text-black group-hover:dark:text-white blend">
          See Repository
        </span>
      </a>
    }
  </div> 
  }
</div>
